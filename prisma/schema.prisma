
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String @db.VarChar(70)
  email String @unique @db.VarChar(100)
  username String @unique @db.VarChar(70)
  password String?
  Post Post[]
  comments Comment[]
  likes Like[]
  notifications Notification []
  createdAt DateTime @default(now())
}

model Post {
 id Int @id @default(autoincrement())
 content String
 image String?
 user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
 user_id Int
 comments Comment[]
 likes Like[]
 comment_count Int @default(0)
 like_count Int @default(0)
 createdAt DateTime @default(now())
}

model Comment {
  id Int @id @default(autoincrement())
  content String
  created_at DateTime @default(now())
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  post Post @relation(fields: [post_id], references: [id], onDelete: Cascade)
  post_id Int
  user_id Int
}

model Notification {
  id String @id @default(uuid())
  content String
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id Int
  toUser_id Int
  created_at DateTime @default(now())
}

model Like {
   id String @id @default(uuid())
   user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
   user_id Int
   post Post @relation(fields: [post_id], references: [id], onDelete: Cascade)
   post_id Int
   status Boolean?
   created_at DateTime @default(now())
}







